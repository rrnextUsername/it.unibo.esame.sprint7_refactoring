/* Generated by AN DISI Unibo */ 
package it.unibo.butler_state_handler

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Butler_state_handler ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						solve("consult('sysRules.pl')","") //set resVar	
						solve("consult('roomState.pl')","") //set resVar	
						solve("consult('cmds.pl')","") //set resVar	
						solve("consult('solverModel.pl')","") //set resVar	
						solve("consult('dataFunctions.pl')","") //set resVar	
						solve("showRoomState","") //set resVar	
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("waitCmd") { //this:State
					action { //it:State
						solve("aggiornaStato(waitCmd,waiting,waiting)","") //set resVar	
					}
					 transition(edgeName="t00",targetState="solveCmd",cond=whenDispatch("cmd"))
				}	 
				state("solveCmd") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("cmd(CMD,ARG1)"), Term.createTerm("cmd(CMD,ARG1)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								println("$name in ${currentState.stateName} | $currentMsg")
								solve("aggiornaStato(solveCmd,${payloadArg(0)},${payloadArg(1)})","") //set resVar	
								solve("comando(${payloadArg(0)},${payloadArg(1)})","") //set resVar	
								println(currentSolution)
						}
					}
					 transition( edgeName="goto",targetState="solveAction", cond=doswitch() )
				}	 
				state("solveAction") { //this:State
					action { //it:State
						solve("showSolverState","") //set resVar	
						solve("retract(azione(ARG0,ARG1,ARG2,ARG3,ARG4))","") //set resVar	
						if(currentSolution.isSuccess()){ forward("action", "action(${getCurSol("ARG0").toString()},${getCurSol("ARG1").toString()},${getCurSol("ARG2").toString()},${getCurSol("ARG3").toString()},${getCurSol("ARG4").toString()})" ,"butler_solver" ) 
						 }
						else
						 { forward("allActionsDone", "allActionsDone" ,"butler_state_handler" ) 
						  }
					}
					 transition( edgeName="goto",targetState="waitAction", cond=doswitch() )
				}	 
				state("waitAction") { //this:State
					action { //it:State
					}
					 transition(edgeName="t01",targetState="handleAdd",cond=whenDispatch("handleAdd"))
					transition(edgeName="t02",targetState="handleRemove",cond=whenDispatch("handleRemove"))
					transition(edgeName="t03",targetState="handleSwap",cond=whenDispatch("handleSwap"))
					transition(edgeName="t04",targetState="stoppedSolvedAction",cond=whenEvent("stopAppl"))
					transition(edgeName="t05",targetState="solveAction",cond=whenDispatch("actionComplete"))
					transition(edgeName="t06",targetState="waitCmd",cond=whenDispatch("allActionsDone"))
				}	 
				state("handleAdd") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("handleAdd(INV,NAME,CATEG)"), Term.createTerm("handleAdd(INV,NAME,CATEG)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								println("$name in ${currentState.stateName} | $currentMsg")
								solve("aggiungi(${payloadArg(0)},${payloadArg(1)},${payloadArg(2)})","") //set resVar	
								solve("showRoomState","") //set resVar	
								solve("assert(done(handleAdd,${payloadArg(0)},${payloadArg(1)},${payloadArg(2)}))","") //set resVar	
								forward("actionComplete", "actionComplete" ,"butler_solver" ) 
						}
					}
					 transition( edgeName="goto",targetState="waitAction", cond=doswitch() )
				}	 
				state("handleRemove") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("handleRemove(INV,NAME,CATEG)"), Term.createTerm("handleRemove(INV,NAME,CATEG)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								println("$name in ${currentState.stateName} | $currentMsg")
								solve("rimuovi(${payloadArg(0)},${payloadArg(1)},${payloadArg(2)})","") //set resVar	
								solve("showRoomState","") //set resVar	
								solve("assert(done(handleRemove,${payloadArg(0)},${payloadArg(1)},${payloadArg(2)}))","") //set resVar	
								forward("actionComplete", "actionComplete" ,"butler_solver" ) 
						}
					}
					 transition( edgeName="goto",targetState="waitAction", cond=doswitch() )
				}	 
				state("handleSwap") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("handleSwap(INV1,INV2,NAME,CATEG)"), Term.createTerm("handleSwap(INV1,INV2,NAME,CATEG)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								println("$name in ${currentState.stateName} | $currentMsg")
								solve("sposta(${payloadArg(0)},${payloadArg(1)},${payloadArg(2)},${payloadArg(3)})","") //set resVar	
								solve("showRoomState","") //set resVar	
								solve("assert(done(handleSwap,${payloadArg(0)},${payloadArg(1)},${payloadArg(2)},${payloadArg(3)}))","") //set resVar	
								forward("actionComplete", "actionComplete" ,"butler_solver" ) 
						}
					}
					 transition( edgeName="goto",targetState="waitAction", cond=doswitch() )
				}	 
				state("stoppedSolvedAction") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						solve("aggiornaStato(stoppedSolvedAction)","") //set resVar	
					}
					 transition(edgeName="t07",targetState="restartSolvedAction",cond=whenEvent("reactivateAppl"))
				}	 
				state("restartSolvedAction") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						solve("assert(done(restartSolvedAction))","") //set resVar	
						solve("aggiornaStato(restartSolvedAction)","") //set resVar	
					}
					 transition(edgeName="t08",targetState="stoppedSolvedAction",cond=whenEvent("stopAppl"))
					transition(edgeName="t09",targetState="solveAction",cond=whenDispatch("actionComplete"))
					transition(edgeName="t010",targetState="waitCmd",cond=whenDispatch("allActionsDone"))
				}	 
			}
		}
}
